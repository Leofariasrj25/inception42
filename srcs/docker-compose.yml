
version: '3'

services:

  mariadb:
    build:
      context: ./srcs/requirements/mariadb/
      dockerfile: Dockerfile 
    container_name: mariadb
    volumes:
      - database:/var/lib/mysql
    ports:
      - 3306:3306
    env_file: .env
    restart: unless-stopped
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${MARIADB_ROOT_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    networks: 
      - inception

  nginx:
    build:
      context: ./srcs/requirements/nginx/
      dockerfile: Dockerfile 
    container_name: nginx
    ports:
      - 443:443
      - 80:80
    volumes:
      - www:/var/www/html/${WP_DOMAIN}/
      - dbadmin:/var/www/html/${ADMINER_DOMAIN}/
    depends_on:
      wordpress:
          condition: service_healthy
    env_file: .env
    restart: unless-stopped
    networks: 
      - inception

  wordpress:
    build:
      context: ./srcs/requirements/wordpress/
      dockerfile: Dockerfile 
    container_name: wordpress
    volumes:
      - www:/var/www/html/${WP_DOMAIN}
    ports:
      - 9000
    depends_on:
      mariadb:
        condition: service_healthy
    env_file: .env
    restart: unless-stopped
    healthcheck:
      test: "/usr/local/bin/wp core is-installed --allow-root --path=/var/www/html/lfarias-.42.fr"
      interval: 2s
      timeout: 600s
      retries: 300 
    networks: 
      - inception

  redis:
    build:
      context: ./srcs/requirements/bonus/redis
      dockerfile: Dockerfile 
    container_name: redis
    ports:
      - 6379 
    env_file: .env
    restart: unless-stopped
    networks: 
      - inception

  adminer:
    build:
      context: ./srcs/requirements/bonus/adminer
      dockerfile: Dockerfile 
    container_name: adminer
    volumes:
      - dbadmin:/var/www/html/${ADMINER_DOMAIN}
    env_file: .env
    restart: unless-stopped
    ports:
      - 8888
    depends_on:
      mariadb:
        condition: service_healthy
    networks: 
      - inception

  ftp:
    env_file: .env
    build:
      context: ./srcs/requirements/bonus/ftp
      dockerfile: Dockerfile 
    container_name: ftp
    volumes:
      - www:/home/${WP_USER}/ftp/files
    restart: unless-stopped
    ports:
      - 20-21:20-21
      - 990:990
      - 10090-10100:10090-10100
    depends_on:
      wordpress:
        condition: service_healthy
    networks: 
    - inception

  jekyll:
    build:
      context: ./srcs/requirements/bonus/jekyll
      dockerfile: Dockerfile 
    container_name: jekyll
    env_file: .env
    restart: unless-stopped
    ports:
      - 4000:4000
    depends_on:
      - nginx
    networks: 
      - inception

  cadvisor:
    build:
      context: ./srcs/requirements/bonus/cadvisor
      dockerfile: Dockerfile 
    container_name: cadvisor
    ports:
      - 8080:8080 
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro 
      - /sys:/sys:ro 
      - /var/lib/docker/:/var/lib/docker:ro
    networks: 
      - inception

  prometheus:
    build:
      context: ./srcs/requirements/bonus/prometheus
      dockerfile: Dockerfile 
    container_name: prometheus
    ports:
      - 9090:9090 
    restart: unless-stopped
    networks: 
      - inception

  grafana:
    build:
      context: ./srcs/requirements/bonus/grafana
      dockerfile: Dockerfile 
    container_name: grafana
    ports:
      - 3000:3000 
    restart: unless-stopped
    networks: 
      - inception

volumes:
  www:
    driver: local
    driver_opts:
      type: none
      device: ${VOLUME_WWW_PATH}
      o: bind
  database:
    driver: local
    driver_opts:
      type: none
      device: ${VOLUME_DB_PATH} 
      o: bind
  dbadmin:
    driver: local
    driver_opts:
      type: none
      device: ${VOLUME_DBADMIN_PATH} 
      o: bind
networks:
  inception: 
    name: inception
    driver: bridge
